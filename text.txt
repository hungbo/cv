一位三年工作经验的软件工程师的经验之谈
工程师人生 • 2018-06-27 09:16 • 3677次阅读  0

时间过得很快，我做软件工程师已经三年整了。我没有做过一个项目，一直在做框架相关的工作，有时维护Web框架代码，有时写移动Hybrid的前端UI框架，也有时做开发工具或自动编译平台等。

一位三年工作经验的软件工程师的经验之谈


我想分享下这段时间在工作上的个人经验，分为几点：

做框架的态度

我工作中做得最多就是框架，框架的本质是提高重用性。对于做框架，除了本身能力很重要外，很关键的是做框架的态度。

1. 不要因为困难的而不去做

（1）。作为程序员的程序员，如果你解决了一个困难的问题，你造福的是所有使用你框架的人。

（2）。即便是很简单的功能，能做就要做，只要这功能不是哗众取宠的。

我很厌烦的是一些遇到困难后，连去深入研究都没有的人。当然困难问题解决起来耗费的时间可能会长，但如果有益，就去解决。

2. 辨认是否真的做不了

可能由于框架开发者能力的问题，在某些问题上找不到解决方案，于是有人就轻易归结为做不了。并不是说不能承认做不了，而是希望能在问题上多加探讨，一句解决不了真太简单了。不要那么容易说“做不了”，这个“做不了”应该是反复验证之后才得出的结论，而不是“你不会”。

3. 将用户当傻瓜

提供出去的东西，不要让使用者做得太多，能封装就封装，能简单就简单。别让他们绕太多弯弯，不然会有一堆疑问抛向你，用的人也很痛苦。

4. 框架技术选择

框架如果需要接入其他技术，不是用自己最擅长的技术，而是大众最常用的。例如当Python、Go、NodeJS都可以选择时候，是否可以考虑最为大众化的NodeJS。

JavaScript

1. 控件本质

我写得最多，最深刻的一点感悟就是。所有的控件效果，抽丝剥茧，可以归结的本质是，对于DOM元素的位置变换、隐现，事件的控制。所以在实现一个控件的时候，最应该做的分析最本质的现象，是与哪些元素相关，包含什么事件，涉及什么CSS3效果。这样，你就不会无从下手。

2. 注意重用

另外，当你写重复代码的时间就要注意了，重复地方是否有重用地方，是否可以做优化。不要就直接复制、粘贴了。JavaScript里面这种随意复制粘贴的情况很常见，所以加强复用东西（组件、控件）的编写能力挺重要。

Hybrid框架（mobile）

之前我做了一年多Hybrid框架的Web UI部分。（目前有很多很好的Hybrid框架，我以前的文章也有说过很多，想看的可以往前翻翻）。这里有两点我想告诉Hybrid框架的开发者。

1. 如何做得像原生做的

（1）.Web页面结合原生壳的应用，在效果上与真正的原生应用还是存在差别。那怎么做的像原生做的，那就是用原生做。动画效果、控件用原生实现，那么效果才真的像。

（2）。 控件样式就根据手机原生控件样子做，像framework7。现在很多框架都能在原生上找到影子。自己特立独行一套效果图出来其实没必要，除非你的能比苹果公司的设计师做的更好。

2. 别用单页

这个是我添加在框架里最糟糕的东西。这个导致了加大开发者开发难度，效果在Android上也不尽如人意。

部署自动化

1. 能自动化的东西，就别手动做

无论是做手机应用，还是桌面应用，原生或混合应用（Hybrid），又或者是前端后端，程序打包编译都应该实现自动化。

2. 把开发人员解放出来

开发一个打包平台，将版本、可配置内容开放出来，给部署人员去做配置打包，开发人员并不参与。

这种事利己利人，特别是在频繁打包构建时候。当你花几天做出自动化东西，会发现后面省下的时间何止几天。

对学习的问题

1.学习只能靠自己

1. 公司本身不是让你学习地方，是为了让你创造价值的，只不过在创造价值时，顺带学习了东西，让你可以得到实践。 当然可能做的事本身就没有可学习地方，那充实自己也只能是自己，也可能学到的东西得不到实践。

2. 前辈只会讲个大概给你，谁也不想手把手的教，都想你能够主动去学习。

2.多学习多总结

从毕业开始到现在，我每到有疑问的时候，都会记下来，找时间去解决它，然后会总结经验，写到博客里。总结写博客有个好处，就是能把经验教训进行一次完整总结，而为了博文内容是正确的，我会查阅很多资料去归纳总结，这样总会有点成长。

还有一点是，学习东西必须有结论，不能看了很多东西，却没有一个定论，这样的话，下次你想起，你依旧不知道关键点在哪。所以，无论结论是对还是错，学了就做属于自己的总结，即便是错，也错得明白。

对错误的态度

1.不要怕

在早些年，遇到问题错误时，在没明白详情时，就开始慌张了，担心自己解决不了。而现在是比较坦然了，对于错误，先理清问题到底是什么，接着判断是不是你该解决的，这问题是否紧急，最后才是考虑怎么解决。最后，天塌了还有老大挡着。

2.承认做不了

自己做不了，就承认做不了，别死鸭子嘴硬，到后面出问题了再说，那就尴尬了。

对于自我

1. 直面不足

我虽然自诩是个前端工程师，但是我知道我做不成那些漂亮的页面（设计），只是在脚本部分有些造诣。我不是个聪明的人，只是还有些小勤奋，我会花时间去弄懂。为了写好一篇博文，会去完整的查找资料验证。

2.成为别人的依靠

三年时间，也使得自己在某些方面是别人完成不了最后一个依靠。这时天塌了，找你了。

3.有些偏执了

随着我看到的东西越来越多，知道得越多，越能认清一个东西对错好坏，对于我认为不对的，就不妥协，一定指出来。

4.小进步

我不是个勤奋的人，也不是个不思进取的人。我也怕自己没有进步，但也不喜欢强迫自己，所以现在我都是争取自己每天有一点不同。闲暇时间会学学弄弄小东西，写写博文，无聊时也会打打游戏，我希望是能遵从我本心。

人总要一些追求的，不然每天都过得差不多。我追求是每天有一点不同，每天有一点小进步，就够了。

总结

我一开始是做一个产品的后端，再后面两年转而做前端的（应部门需要，在我的部门里面，不是看你会什么，而是看要做什么，如果需要新技术才能做的，那就要去学，然后用起来）。三年时间过得很快，上面这些是我感觉比较重要的，希望对初入社会的程序员有些用处。